# List of cameras invloved in calibration
# vector<string>
# format: [camera1_name, camera1_dof, camera1_max_delta_angle
#          camera2_name, camera2_dof, camera2_max_delta_angle]
# cameraX_name can be any name to distinguish different cameras inside the interface
# max_delta_angle is a security measure to avoid movement when target angles and current angles of a camera are not too far away from one another.
# This can lead to collision issues for some cameras (e.g. when attached to an arm). Setting it to 0 turns it off (only recommended for pan/tilt cameras)
cameras_list: ["realsense_sr300", "6", "0"] #["ids_ueye", "2", "0"]

# ranges for the degrees of freedom of the robot, relative to reference_frame
# These range parameters generate poses for the robot's base to feed the base configuration vector. A grid will be generated using the start,
# step and end values of each parameter. During the calibration snapshot process those base configurations will be used to move the robot around.
# The values are measured relative to the reference_frame frame which will be set up by the relative_localization package and is similarly aligned
# like the chosen base_frame in the relative_localization package. The phi angle describes the desired rotation of the base_frame in relation to the
# reference_frame. The rotation axis is assumed to be the z-axis.
# each parameter is set as [min_value, step, max_value]
# vector<double>
# values for calibrating at the robot's right side:
x_range: [-2.0, 0.1667, -1.48]       # in [m]
y_range: [0.7, 0.2, 1.31]         # in [m], fixed y-coordinate
phi_range: [1.571, 1.0, 1.571]           # in [rad], fixed phi-angle
# values for calibrating at the robot's front:
#x_range: [-2.0, 0.3, -1.399]       # in [m]
#y_range: [0.8, 0.3, 1.401]         # in [m], fixed y-coordinate
#phi_range: [0, 1.0, 0]           # in [rad], fixed phi-angle

#ids_ueye_ranges: [-2.4, 0.4, -1.6,
#                   0.4, 0.2, 0.8]   # first pan then tilt in [rad]
#<camera2_name>_ranges: []  # further cameras possible

# manually input of configurations for corresponding camera in camera_list
# the configs list will be used over the ranges list
# vector<double>
#ids_ueye_configs: []

# further cameras possible
#<camera2_name>_configs: []

# values for calibrating at the robot's right side:
realsense_sr300_configs: [-2.423, -0.362, -2.415, -3.285, -1.611, -0.021,
                          -2.423, -0.362, -2.415, -3.585, -1.611, -0.021,
                          -2.423, -0.362, -2.415, -3.585, -1.611, -0.021,
                          -2.423, -0.862, -2.415, -3.885, -1.611, -0.021,
                          -2.223, -1.262, -2.315, -3.685, -1.411, -0.221,
                          -2.623, -0.962, -2.25, -4.085, -1.211, 0.2,
                          -2.571, -1.15, -2.2, -3.72, -1.05, 0.3,
                          -2.271, -1.95, -2.3, -2.8, -0.6, 0.4,
                          -1.771, -1.6, -2.3, -3.5, -1.1, 0.5,
                          -1.371, -0.9, -2.2, -4.1, -0.75, 0.45,
                          -1.471, -0.7, -1.8, -4.3, -0.9, 0.45,
                          -1.671, -0.6, -1.6, -4.2, -1.0, -0.2,
                          -1.871, -0.5, -1.9, -4.2, -1.2, -0.05,
                          -2.671, -0.4, -1.7, -4.8, -1.5, -0.05,
                          -2.571, -0.3, -2.4, -3.59, -1.8, 0.05]
# values for calibrating at the robot's front:
#realsense_sr300_configs: [-0.852, -0.362, -2.415, -3.285, -1.611, -0.021,
#                          -0.852, -0.362, -2.415, -3.585, -1.611, -0.021,
#                          -0.852, -0.362, -2.415, -3.585, -1.611, -0.021,
#                          -0.852, -0.862, -2.415, -3.885, -1.611, -0.021,
#                          -0.652, -1.262, -2.315, -3.685, -1.411, -0.221,
#                          -1.052, -0.962, -2.25, -4.085, -1.211, 0.2,
#                          -1.0, -1.15, -2.2, -3.72, -1.05, 0.3,
#                          -0.7, -1.95, -2.3, -2.8, -0.6, 0.4,
#                          -0.2, -1.6, -2.3, -3.5, -1.1, 0.5,
#                          0.2, -0.9, -2.2, -4.1, -0.75, 0.45,
#                          0.1, -0.7, -1.8, -4.3, -0.9, 0.45,
#                          -0.1, -0.6, -1.6, -4.2, -1.0, -0.2,
#                          -0.3, -0.5, -1.9, -4.2, -1.2, -0.05,
#                          -1.1, -0.4, -1.7, -4.8, -1.5, -0.05,
#                          -1.0, -0.3, -2.4, -3.59, -1.8, 0.05]


# list of robot's base configurations used in calibration for observing the pitags measured relative to the reference_frame coordinate system that is similarly aligned as the robot's base_link
# each base configuration will go through every camera's configuration
# vector<double>
base_configs: []

# the robot's base moves until base_frame is correctly aligned relative to the reference_frame as given in the base configurations
base_frame: "base_link"

# the name of the detected reference frame. Should match the entry found in the relative_localization yaml files.
# string
reference_frame: "/landmark_reference_nav"

# controller error (between reference_frame and base_frame) will be transformed in the controller_frame before being applied to the motors
# string
controller_frame: "base_link"

# max distance (radius) the referenece_frame is allowed to be away in terms of the robot's base_frame
# double
max_ref_frame_distance: 4.0

# collection of uncertainties. each uncertainty consists of 5 parameters:
# [parent frame, child frame, last parent-branch frame (directly connected to parent marker), last child-branch frame (directly connected to child marker), parent marker, child marker]
# the uncertainties will be calibrated in the same order they appear in the uncertainties_list
# last parent-branch frame and last child-branch frame have to be available from TF from the very beginning, so that the routine can build the kinematic chains
# only transforms prior to last parent-branch frame and last child-branch frame can be used as uncertainties
uncertainties_list: ["base_link", "arm_base_link", "landmark_reference_nav", "camera_color_optical_frame", "tag_25", "marker_25",
                     "base_link", "arm_base_link", "landmark_reference_nav", "camera_color_optical_frame", "tag_36", "marker_36",
                     "base_link", "arm_base_link", "landmark_reference_nav", "camera_color_optical_frame", "tag_38", "marker_38",
                     "base_link", "arm_base_link", "landmark_reference_nav", "camera_color_optical_frame", "tag_48", "marker_48",
                     "base_link", "arm_base_link", "landmark_reference_nav", "camera_color_optical_frame", "tag_55", "marker_55",
                     "base_link", "arm_base_link", "landmark_reference_nav", "camera_color_optical_frame", "tag_64", "marker_64",
                     "base_link", "arm_base_link", "landmark_reference_nav", "camera_color_optical_frame", "tag_69", "marker_69",
                     "base_link", "arm_base_link", "landmark_reference_nav", "camera_color_optical_frame", "tag_73", "marker_73",
                     "base_link", "arm_base_link", "landmark_reference_nav", "camera_color_optical_frame", "tag_79", "marker_79",

                     "arm_camera_link", "camera_link", "landmark_reference_nav", "camera_color_optical_frame", "tag_25", "marker_25",
                     "arm_camera_link", "camera_link", "landmark_reference_nav", "camera_color_optical_frame", "tag_36", "marker_36",
                     "arm_camera_link", "camera_link", "landmark_reference_nav", "camera_color_optical_frame", "tag_38", "marker_38",
                     "arm_camera_link", "camera_link", "landmark_reference_nav", "camera_color_optical_frame", "tag_48", "marker_48",
                     "arm_camera_link", "camera_link", "landmark_reference_nav", "camera_color_optical_frame", "tag_55", "marker_55",
                     "arm_camera_link", "camera_link", "landmark_reference_nav", "camera_color_optical_frame", "tag_64", "marker_64",
                     "arm_camera_link", "camera_link", "landmark_reference_nav", "camera_color_optical_frame", "tag_69", "marker_69",
                     "arm_camera_link", "camera_link", "landmark_reference_nav", "camera_color_optical_frame", "tag_73", "marker_73",
                     "arm_camera_link", "camera_link", "landmark_reference_nav", "camera_color_optical_frame", "tag_79", "marker_79"]

#["base_link","torso_0_link", "landmark_reference_nav", "ids_ueye_frame", "tag_25", "marker_25",
#                     "base_link","torso_0_link", "landmark_reference_nav", "ids_ueye_frame", "tag_36", "marker_36",
#                     "base_link","torso_0_link", "landmark_reference_nav", "ids_ueye_frame", "tag_38", "marker_38",
#                     "base_link","torso_0_link", "landmark_reference_nav", "ids_ueye_frame", "tag_48", "marker_48",
#                     "base_link","torso_0_link", "landmark_reference_nav", "ids_ueye_frame", "tag_55", "marker_55",
#                     "base_link","torso_0_link", "landmark_reference_nav", "ids_ueye_frame", "tag_64", "marker_64",
#                     "base_link","torso_0_link", "landmark_reference_nav", "ids_ueye_frame", "tag_69", "marker_69",
#                     "base_link","torso_0_link", "landmark_reference_nav", "ids_ueye_frame", "tag_73", "marker_73",
#                     "base_link","torso_0_link", "landmark_reference_nav", "ids_ueye_frame", "tag_79", "marker_79",

#                     "torso_tilt_link","ids_ueye_link", "landmark_reference_nav", "ids_ueye_frame", "tag_25", "marker_25",
#                     "torso_tilt_link","ids_ueye_link", "landmark_reference_nav", "ids_ueye_frame", "tag_36", "marker_36",
#                     "torso_tilt_link","ids_ueye_link", "landmark_reference_nav", "ids_ueye_frame", "tag_38", "marker_38",
#                     "torso_tilt_link","ids_ueye_link", "landmark_reference_nav", "ids_ueye_frame", "tag_48", "marker_48",
#                     "torso_tilt_link","ids_ueye_link", "landmark_reference_nav", "ids_ueye_frame", "tag_55", "marker_55",
#                     "torso_tilt_link","ids_ueye_link", "landmark_reference_nav", "ids_ueye_frame", "tag_64", "marker_64",
#                     "torso_tilt_link","ids_ueye_link", "landmark_reference_nav", "ids_ueye_frame", "tag_69", "marker_69",
#                     "torso_tilt_link","ids_ueye_link", "landmark_reference_nav", "ids_ueye_frame", "tag_73", "marker_73",
#                     "torso_tilt_link","ids_ueye_link", "landmark_reference_nav", "ids_ueye_frame", "tag_79", "marker_79"]


# number of optimization iterations
# int
optimization_iterations: 10000

# timeout after which a TF transform won't be used for calibration anymore
# double
transform_discard_timeout: 3.0

# storage folder that holds the calibration output
# string
calibration_storage_path: "raw_calibration/realsense_pitag_calibration"
