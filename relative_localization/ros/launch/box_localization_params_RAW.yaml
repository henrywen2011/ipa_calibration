# Defines how fast new measurements are averaged into the transformation estimate (new_value = (1-update_rate)*old_value + update_rate*measurement). [0,1]
# double
update_rate: 0.75

# The name of the computed reference frame.
# string
reference_frame: "/landmark_reference_nav"

# height above ground of base frame
# double
base_height: 0.0

# base link of robot
# string
base_frame: "base_link"

# frame which is used to build the whole detection (polygons, etc..) upon, it can be assigned with an existing frame or a yet unknown frame
# existing frame: All the detection will be built upon the assigned frame (e.g. robot's base frame)
# unknown frame: A new frame will be created relative to odom_combined_frame_ and the start position (base_frame) of the robot (facing the front wall).
# the frame will be set up once at startup and prevents that robot rotations mess up the reference frame detection.
# string
detection_base_frame: "detection_base"

# name of odom_combined frame, which is only used when detection_base_frame does not exist at startup and has to be created
# string
odom_combined_frame: "odom_combined"

# laser scanner topic
# string
laser_scanner_topic_in: "/base_laser_front/scan"

# Polygon points that define the area which is used to find the front wall inside.
# Includes x and y coordinates [in m] of each point that define the polygon in the robot's base frame. Input at least 3 points.
# vector<Point2f>
front_wall_polygon: [0.3, 0.75,
                     3, 0.75,
                     3, -0.75,
                     0.3, -0.75,
                     0.3, 0.75]

# Polygon points that define the area which is used to find the box inside.
# Includes x and y coordinates [in m] of each point that define the polygon in the robot's base frame. Input at least 3 points.
# vector<Point2f>
box_search_polygon: [0.3, 0.5,
                     1.5, 0.5,
                     1.5, -0.5,
                     0.3, -0.5,
                     0.3, 0.5]
